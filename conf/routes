# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET     /activities                          		controllers.ApplicationController.index()
GET     /category/:id								controllers.ApplicationController.category(id:java.lang.Integer)
GET		/category_playlists/:id						controllers.ApplicationController.playlistByCategory(id:java.lang.Integer)

GET		/playlist/search.json						controllers.PlaylistController.searchJson()
GET		/playlist/get_current_playlist.json			controllers.PlaylistController.getCurrentPlaylistJson(id:java.lang.Integer = -1)
GET		/playlist/get_current_playlist/:id			controllers.PlaylistController.getCurrentPlaylistJson(id:java.lang.Integer )
GET		/playlist/set_current_playlist/:id			controllers.PlaylistController.setCurrentPlaylistJson(id:java.lang.Integer)
GET		/playlist/get_user_data/:playlistId.json	controllers.PlaylistController.getUserPlaylistData(playlistId:java.lang.Integer)


GET		/playlist/view/:id							controllers.PlaylistController.playlist(id:java.lang.Integer, musicCategoryId:java.lang.Integer = null)
GET		/playlist/view/:id/:musicCategoryId			controllers.PlaylistController.playlist(id:java.lang.Integer, musicCategoryId:java.lang.Integer)

GET 	/playlists/browse							controllers.PlaylistController.browseCategories()
GET		/playlists/browse/:musicCategoryId			controllers.PlaylistController.browseCategory( musicCategoryId:java.lang.Integer, page: java.lang.Integer ?= 0)
GET		/playlists/popular/:category				controllers.PlaylistController.popular(category:String)

POST	/twitter_callback							controllers.ApplicationController.twitterCallback()
GET		/twitter_callback							controllers.ApplicationController.twitterCallback()

GET		/song/search.json							controllers.SongController.searchJson()

POST		/playlist/activity/track				controllers.PlaylistController.trackPlaylistSongActivity()
POST		/playlist/activity/rating				controllers.PlaylistController.savePlaylistSongRating()
GET			/playlist/favorite/save/:playlistId		controllers.PlaylistController.saveFavoritePlaylist(playlistId:java.lang.Integer ) 
GET			/playlist/favorite/delete/:playlistId	controllers.PlaylistController.deleteFavoritePlaylist(playlistId:java.lang.Integer )

GET			/playlist/create				controllers.PlaylistController.create()
POST		/playlist/create				controllers.PlaylistController.createSubmit()
GET			/playlist/edit/:id				controllers.PlaylistController.edit(id:java.lang.Integer)
GET			/playlist/delete/:id			controllers.PlaylistController.delete(id:java.lang.Integer)
POST		/playlist/delete/:id			controllers.PlaylistController.deleteSubmit(id:java.lang.Integer)
POST		/playlist/edit/:id				controllers.PlaylistController.editSubmit(id:java.lang.Integer)
GET			/playlist/publish/:id			controllers.PlaylistController.publish(id:java.lang.Integer)
GET			/playlist/private/:id			controllers.PlaylistController.makePrivate(id:java.lang.Integer)
GET			/user/playlists					controllers.PlaylistController.userPlaylists(page: java.lang.Integer ?= 0)

GET			/admin							controllers.AdminController.dashboard()
POST    	/admin/login            		controllers.AdminController.authenticate()
GET			/admin/login					controllers.AdminController.login()
GET			/admin/logout					controllers.AdminController.logout()

GET			/admin/user/edit/:id			controllers.AdminController.editUser(id: java.lang.Integer)
POST		/admin/user/edit/:id			controllers.AdminController.editUserSubmit(id: java.lang.Integer)
GET			/admin/user/delete/:id			controllers.AdminController.deleteUser(id: java.lang.Integer)
POST		/admin/user/delete/:id			controllers.AdminController.deleteUserSubmit(id: java.lang.Integer)
POST		/admin/user/send_invitation/:id	controllers.AdminController.sendInvitation(id: java.lang.Integer)
GET			/admin/user/send_multiple_invitations	controllers.AdminController.sendMultipleUserInvitations(idList: String)
GET			/admin/user/delete_multiple		controllers.AdminController.deleteMultipleUsers(idList: String)
POST		/admin/user/delete_multiple		controllers.AdminController.deleteMultipleUsersSubmit(idList: String)
GET			/admin/users/browse				controllers.AdminController.browseUsers(page:java.lang.Integer ?= 0, term:String ?= "")

GET			/admin/artists/browse			controllers.AdminController.browseArtists(page:java.lang.Integer ?= 0, term:String ?= "")
GET			/admin/artist/edit/:id			controllers.AdminController.editArtist(id: java.lang.Integer)
POST		/admin/artist/edit/:id			controllers.AdminController.editArtistSubmit(id: java.lang.Integer)

GET			/admin/albums/browse			controllers.AdminController.browseAlbums(page:java.lang.Integer ?= 0, term:String ?= "", artistId:java.lang.Integer ?= 0)
GET			/admin/album/edit/:id			controllers.AdminController.editAlbum(id: java.lang.Integer)
POST		/admin/album/edit/:id			controllers.AdminController.editAlbumSubmit(id: java.lang.Integer)

GET			/admin/songs/browse				controllers.AdminController.browseSongs(page:java.lang.Integer ?= 0, term:String ?= "", albumId:java.lang.Integer ?= 0)
GET			/admin/song/edit/:id			controllers.AdminController.editSong(id: java.lang.Integer)
POST		/admin/song/edit/:id			controllers.AdminController.editSongSubmit(id: java.lang.Integer)

GET			/admin/playlists/browse			controllers.AdminController.browsePlaylists(page:java.lang.Integer ?= 0, term:String ?= "")
GET			/admin/playlists/delete/:id		controllers.AdminController.deletePlaylist(id:java.lang.Integer)
POST		/admin/playlists/delete/:id		controllers.AdminController.deletePlaylistSubmit(id:java.lang.Integer)
GET			/admin/playlist/edit/:id		controllers.AdminController.editPlaylist(id:java.lang.Integer)
POST		/admin/playlist/edit/:id		controllers.AdminController.editPlaylistSubmit(id:java.lang.Integer)



GET			/admin/genres/browse			controllers.AdminController.browseGenres(page:java.lang.Integer ?= 0, term:String ?= "")
GET			/admin/genre/edit/:id			controllers.AdminController.editGenre(id: java.lang.Integer)
POST		/admin/genre/edit/:id			controllers.AdminController.editGenreSubmit(id: java.lang.Integer)
GET			/admin/genre/add				controllers.AdminController.addGenre()
POST		/admin/genre/add				controllers.AdminController.addGenreSubmit()

GET			/admin/music_categories/browse/:categoryType			controllers.AdminController.browseMusicCategories( categoryType:String )
GET			/admin/music_categories/update_order					controllers.AdminController.updateMusicCategoryOrder( parentId:java.lang.Integer ?= 0, children:String ?= ""  )
GET			/admin/music_category/edit/:id							controllers.AdminController.editMusicCategory( id: java.lang.Integer )
POST		/admin/music_category/edit/:id							controllers.AdminController.editMusicCategorySubmit( id: java.lang.Integer )
GET			/admin/music_category/add/:parentId/:categoryType		controllers.AdminController.addMusicCategory( parentId: java.lang.Integer, categoryType:String )
POST		/admin/music_category/add/:parentId/:categoryType		controllers.AdminController.addMusicCategorySubmit( parentId: java.lang.Integer, categoryType:String )
GET			/admin/music_category/delete/:id						controllers.AdminController.deleteMusicCategory(id:java.lang.Integer)
POST		/admin/music_category/delete/:id						controllers.AdminController.deleteMusicCategorySubmit(id:java.lang.Integer)

GET			/admin/batch_jobs/browse				controllers.AdminController.browseBatchJobs(page:java.lang.Integer ?= 0, term:String ?= "" )
GET			/admin/batch_job/add					controllers.AdminController.addBatchJob()
POST		/admin/batch_job/add					controllers.AdminController.addBatchJobSubmit()
GET			/admin/batch_job/edit/:id				controllers.AdminController.editBatchJob(id: java.lang.Integer)
POST		/admin/batch_job/edit/:id				controllers.AdminController.editBatchJobSubmit(id: java.lang.Integer)
GET			/admin/batch_jobs/info					controllers.AdminController.batchJobsInfo()
GET			/admin/batch_job/delete/:id				controllers.AdminController.deleteBatchJob(id:java.lang.Integer)
POST		/admin/batch_job/delete/:id				controllers.AdminController.deleteBatchJobSubmit(id:java.lang.Integer)



GET			/admin/song/metadata/:id				controllers.AdminController.readSongMetadata(id: java.lang.Integer)
GET			/admin/song/get_echonest_info/:id 		controllers.AdminController.getEchonestInfo(id: java.lang.Integer )
GET			/test/akka								controllers.ImportController.akkaTest()
GET			/test/actor								controllers.ImportController.actorBatchTest()

GET     /login                      				controllers.UserController.login()
POST    /login                      				controllers.UserController.authenticate()
GET     /logout                     				controllers.UserController.logout()
GET		/user/forgot_password						controllers.UserController.forgotPassword()
POST	/user/forgot_password						controllers.UserController.forgotPasswordSubmit()
POST	/user/reset_password/:resetCode				controllers.UserController.resetPassword(resetCode:String)
GET		/user/reset_password/:resetCode				controllers.UserController.resetPassword(resetCode:String)


GET		/register									controllers.UserController.register(invitationCode:String ?= "")
POST	/register									controllers.UserController.registerSubmit(invitationCode:String ?= "")
GET		/register_success							controllers.UserController.registerSuccess()
GET		/register_with_fb							controllers.UserController.registerWithFacebook(invitationCode:String ?= "")


GET		/user/get_current.json						controllers.UserController.getAuthUserJson()

GET		/artists/browse/:id							controllers.ArtistController.browse(id:java.lang.Integer)
GET		/artists/browse								controllers.ArtistController.browse(id:java.lang.Integer = 0)
GET		/album/:id									controllers.AlbumController.view(id:java.lang.Integer)

GET 	/albums/browse/:artistId					controllers.AlbumController.browseByArtist(artistId:java.lang.Integer)

GET		/user/view/:id								controllers.UserController.publicProfile(id:java.lang.Integer)

GET		/contact_us									controllers.PageController.contactUs()
GET		/about										controllers.PageController.about()
GET		/privacy_policy								controllers.PageController.privacyPolicy()
GET		/terms_of_use								controllers.PageController.termsOfUse()
GET		/copyright_infringment						controllers.PageController.copyrightInfringment()

GET		/profile									controllers.UserController.profile()
POST	/profile									controllers.UserController.profileUpdate()

GET		/profile/:id								controllers.UserController.publicProfile(id:java.lang.Integer)

GET		/VIPRegistration 							controllers.UserController.hiddenRegister()
POST	/VIPRegistration 							controllers.UserController.hiddenRegisterSubmit()
GET		/VIPRegistration/facebook					controllers.UserController.hiddenRegisterWithFacebook()

GET		/											controllers.UserController.homepageRegister()
POST 	/ 											controllers.UserController.homepageRegisterSubmit()
GET 	/homepage_register_success 					controllers.UserController.homepageRegisterSuccess()

GET 	/import/s3_music							controllers.ImportController.importMusicFromS3Account()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
